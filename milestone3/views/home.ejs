<%- include('partials/header'); -%>


  	
    <h2 id = "test">Product By</h2>
    <h1 id = "test">GROUP 13</h1>
   
<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
<link href="https://unpkg.com/tabulator-tables@4.9.3/dist/css/tabulator.min.css" rel="stylesheet">
<script type="text/javascript" src="https://unpkg.com/tabulator-tables@4.9.3/dist/js/tabulator.min.js"></script>

     <button onclick="loadUserData()">Your Devices</button>
     <br> <br>
     <div id="table"></div>
     <br>
     <h4 id = "daily"></h4>

     <button onclick="loadMonthlyUsage()">Usage Statistics</button>
     <br> <br>
     
     <canvas id="myChart" background = 'white'></canvas>
     <br>
     <h4 id = "total"></h4>

<%- include('partials/footer'); -%>


<script>


function loadMonthlyUsage() 
{
	var xhr = new XMLHttpRequest();
   

   	xhr.open('GET', '/statistics', true);


   	var colorArray = ['#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6', 
		  '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D',
		  '#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A', 
		  '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC',
		  '#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC', 
		  '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399',
		  '#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680', 
		  '#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933',
		  '#FF3380', '#CCCC00', '#66E64D', '#4D80CC', '#9900B3', 
		  '#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF'];

   	xhr.onload = function()
   	{
   		if(this.status == 200)
        {
          var statistics = JSON.parse(this.responseText);
          
          console.log(statistics);

         dataSet = statistics.details;

         var plot = new Array(dataSet.length);

         now = new Date();

         var total = 0;
   
		 day = ((now).getDate());
		 day = 10;
         for(i = 0; i < dataSet.length; i++)
         {	
            plot[i] = {
		         		label : "Tank: 0" + dataSet[i].no,
			         	borderColor : colorArray[i],
			         	data : dataSet[i].monthlyUsage.slice(0, day)
         			  }   
         			  console.log(plot[i].data.toString()) 

         			  for (var j = 0; j < day; j++) 
         			  {
         			      	  total = total + parseInt(plot[i].data[j], 10);
         			  }    	        	
         }

         console.log("total :"+total) 
         
         document.getElementById("total").innerHTML = "Total Monthly Usage: " + total + " L";
         xAxis = ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31'];
         var ctx = document.getElementById('myChart').getContext('2d');
        
		 var chart = new Chart(ctx, {
		    // The type of chart we want to create
		    type: 'line',

		    // The data for our dataset
		    data: {
		        labels: xAxis.slice(0, day),
		        datasets:  plot,
		        		        
		    },

		    // Configuration options go here
		    options: {  
		    			scales: 
					              {
					                yAxes: [{
					                	 ticks: {
						                    suggestedMin: 0,
						                    fontColor: 'black',
						                    fontSize : 15

						               		 },
					                	 gridLines: {

							                color: "blue",
							           				},
					                  scaleLabel: {
					                     			display: true,
					                     			align : 'start',
					                 				labelString: 'Usage / L',
					                 				fontColor: 'black',
					                            	fontSize : 20
					                        }
					                        }],

					                 xAxes: [{

					                 	 ticks: {
					                    suggestedMin: 1,
					                    fontColor: 'black',
					                    fontSize : 15

					                },

					                  gridLines: {

							                color: "blue",
							            		  },
					                  scaleLabel: {
								                 display: true,
								                 align : 'end',
								                 labelString: 'Date',
								                 fontColor: 'black',
					                             fontSize : 20
					                        }
					                        }]

					              }, 



		    			title: {
						            display: true,
						            text: 'Monthly Usage',
						            fontSize : 30,
						            fontColor: 'black',
        						},




        				legend: {

					                labels:  {
					                            fontColor: 'black',
					                            fontSize : 20
					                         }


                				},

        				font: 	{
                       			 	fontColor: 'red',bold : true,
                    			},

                    	aspectRatio: 4

                 


        		}

		});

	

        }

        if(this.status == 429)
        {
          document.getElementById("myChart").innerHTML = "Too many requests from this IP, please try again after an hour!"; 
        }


   	}

   	xhr.send();

}


function loadUserData() 
{
  
   var xhr = new XMLHttpRequest();
   

   xhr.open('GET', '/tanks', true);

   xhr.onload = function()
   {
        if(this.status == 200)
        {
          var user = JSON.parse(this.responseText);
          
          console.log(user);

          var total = 0;

          for(i = 0; i < user.details.length; i++)
          {
          	total = total + parseInt(user.details[i].usage, 10);
          }

          document.getElementById("daily").innerHTML = "Total Usage of Today: " + total + " L";

          var table = new Tabulator("#table", {
    data:user.details,           //load row data from array
    layout:"fitColumns",      //fit columns to width of table
    rowFormatter:function(row){
        if(row.getData().tds > 200 || row.getData().turbidity > 5)
        {
            row.getElement().style.backgroundColor = "salmon";
           
        }
        
    },
    responsiveLayout:"hide",  //hide columns that dont fit on the table
    tooltips:true,            //show tool tips on cells
    addRowPos:"top",          //when adding a new row, add it to the top of the table
    history:true,             //allow undo and redo actions on the table
    pagination:"local",       //paginate the data
    paginationSize:7,         //allow 7 rows per page of data
    movableColumns:true,      //allow column order to be changed
    resizableRows:true,       //allow row order to be changed
    initialSort:[             //set the initial sort order of the data
        {column:"name", dir:"asc"},
    ],
    columns:[                 //define the table columns
        {title:"Tank",textarea :true, field:"no", hozAlign:"left", editor:false},
        {title:"Water Level", field:"level", hozAlign:"left", formatter:"progress",formatterParams: {max: 1000, color : ["red", "orange", "green"] }, editor:false},
        {title:"Consumption", field:"usage", hozAlign:"left", formatter:"progress",formatterParams: {max: 1000, color : ["green", "orange", "red"]}, editor:false},
        {title:"TDS Count", field:"tds", hozAlign:"left", editor:false, formatter:function(cell, formatterParams)
        	{
		       var value = cell.getValue();
		        if(value > 200)
		        {
		            return "<span style='color:red; font-weight:bold;'>" + value + "</span>";
		        }
		        else
		        {
		            return "<span style='color:green; font-weight:bold;'>" + value + "</span>";
		        }
		    }},

        {title:"Turbidity", field:"turbidity",hozAlign:"left", editor:false, formatter:function(cell, formatterParams)
        	{
		       var value = cell.getValue();
		        if(value > 5)
		        {
		            return "<span style='color:red; font-weight:bold;'>" + value + "</span>";
		        }
		        else
		        {
		             return "<span style='color:green; font-weight:bold;'>" + value + "</span>";
		        }
		    }},


        {title:"Last Updated", field:"updated_at", sorter:"date", hozAlign:"left"},
     
        
    ]
});
      
        }
        if(this.status == 429)
        {
          document.getElementById("table").innerHTML = "Too many requests from this IP, please try again after an hour!"; 
        }



      }

      xhr.send();

}







</script>